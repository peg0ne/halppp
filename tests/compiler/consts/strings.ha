glob =>
    ARG_END ") {\n"
    ARG_SEP ", "
    ASSIGNMENT " = "
    BLOCK_END "}\n"
    BLOCK_START " {\n"
    CHAR_QUOTE '"'
    CHAR_SINGLE '\''
    CLASS "class "
    COMPILER_OUT " -o "
    CPP_SUFFIX ".cpp"
    EMPTY ""
    ENUM "enum "
    ENUM_SEP ",\n"
    FOR_AFTER_UNTIL "; "
    FOR_END "++) {\n"
    FOR_MID " = 0; "
    FOR_START "for(int "
    FOR_UNTIL " < "
    HA_SUFFIX ".ha"
    INCLUDE "#include "
    INHERIT ": public "
    LARROW "<"
    LINE_END ";\n"
    LPAREN "("
    NAMESPACE "using namespace "
    NEWLINE "\n"
    PRIVATE_STATE " private:\n"
    PROTECTED_STATE " protected:\n"
    PUBLIC_STATE " public:\n"
    QUOTE "\""
    RARROW ">"
    RBRACK "}"
    RETURN_VALUE_IDS "return_value"
    RPAREN ")"
    SPACE " "
    STRUCT "struct "
    TAB "   "
    TEMPLATE "template <typename "
    TEMPLATE_END ">\n"
    TEMPLATE_MID ", typename "
    VOID "void"
    GLOBAL "#define "
;